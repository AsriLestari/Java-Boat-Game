/*
 * GameWindow.java
 *
 * Created on 18 November 2007, 09:56
 */
package game;

import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.RenderingHints.Key;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.Toolkit;
import java.awt.event.*;
import java.awt.font.FontRenderContext;
import java.awt.font.GlyphVector;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.awt.image.BufferedImageOp;
import java.awt.image.ImageObserver;
import java.awt.image.RenderedImage;
import java.awt.image.renderable.RenderableImage;
import java.text.AttributedCharacterIterator;
import java.util.Map;
import javax.swing.*;
import javax.swing.event.*;

/**
 *
 * @author  Mark
 */
public class GameWindow extends javax.swing.JFrame {

    private GameEngine gameEngine;
    private static GameWindow singleton;
    Thread tGameEngine;

    public GameWindow() {

        synchronized (GameWindow.class) {
            singleton = this;
        }
        initComponents();
    //myInitialization();

    }

    public static GameWindow getInstance() {
        if (singleton != null) {
            return singleton;

        } else {
            synchronized (GameWindow.class) {
                if (singleton == null) {
                    singleton = new GameWindow();
                }
            }

        }
        return singleton;
    }

    public void myInitialization() {

        renderer = Renderer.getInstance();


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlGame = new javax.swing.JPanel();
        controlPanel = new game.ControlPanel();
        renderer = new game.Renderer();
        jBtnGo = new javax.swing.JButton();
        jBtnReset = new javax.swing.JButton();
        jBtnStorm = new javax.swing.JButton();
        jPrgEnergy = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 153));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlGame.setBackground(new java.awt.Color(204, 204, 255));
        jPnlGame.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPnlGame.add(controlPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 370, -1));

        renderer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rendererMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rendererMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rendererMouseReleased(evt);
            }
        });
        renderer.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                rendererMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                rendererMouseMoved(evt);
            }
        });
        renderer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rendererKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rendererKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout rendererLayout = new javax.swing.GroupLayout(renderer);
        renderer.setLayout(rendererLayout);
        rendererLayout.setHorizontalGroup(
            rendererLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
        );
        rendererLayout.setVerticalGroup(
            rendererLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );

        jPnlGame.add(renderer, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 680, 570));

        jBtnGo.setText("Go!");
        jBtnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGoActionPerformed(evt);
            }
        });
        jPnlGame.add(jBtnGo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, 30));

        jBtnReset.setText("Reset");
        jBtnReset.setEnabled(false);
        jBtnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnResetActionPerformed(evt);
            }
        });
        jPnlGame.add(jBtnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, -1, 30));

        jBtnStorm.setText("Storm");
        jBtnStorm.setEnabled(false);
        jBtnStorm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnStormActionPerformed(evt);
            }
        });
        jPnlGame.add(jBtnStorm, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, -1, 30));

        jPrgEnergy.setValue(100);
        jPnlGame.add(jPrgEnergy, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 280, -1));

        jLabel1.setText("Energy");
        jPnlGame.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, -1, -1));

        getContentPane().add(jPnlGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void jBtnStormActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jBtnStormActionPerformed
    {//GEN-HEADEREND:event_jBtnStormActionPerformed


        Controller.getInstance().triggerStorm();
}//GEN-LAST:event_jBtnStormActionPerformed

    private void jBtnResetActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jBtnResetActionPerformed
    {//GEN-HEADEREND:event_jBtnResetActionPerformed
        resetGame();	
    }//GEN-LAST:event_jBtnResetActionPerformed

    private void rendererMouseDragged(java.awt.event.MouseEvent evt)//GEN-FIRST:event_rendererMouseDragged
    {//GEN-HEADEREND:event_rendererMouseDragged
        Controller c = Controller.getInstance();
        c.handleMouseMove(evt);
    // TODO add your handling code here:
    }//GEN-LAST:event_rendererMouseDragged

    private void rendererKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_rendererKeyReleased
    {//GEN-HEADEREND:event_rendererKeyReleased

        Controller c = Controller.getInstance();
        c.handleKeyRelease(evt);
    }//GEN-LAST:event_rendererKeyReleased

    private void rendererKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_rendererKeyPressed
    {//GEN-HEADEREND:event_rendererKeyPressed

        Controller c = Controller.getInstance();
        c.handleKeyPress(evt);
    }//GEN-LAST:event_rendererKeyPressed

    private void jBtnGoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jBtnGoActionPerformed
    {//GEN-HEADEREND:event_jBtnGoActionPerformed

        startGame();
    }//GEN-LAST:event_jBtnGoActionPerformed

    public void startGame(){

        renderer.requestFocusInWindow();
        singleton.go();
        this.jBtnReset.setEnabled(true);
        this.jBtnStorm.setEnabled(true);        
    }
    private void resetGame() {


        
        Renderer.reset();
        renderer = Renderer.getInstance();

        //reset old game engine
        GameEngine.reset();
        gameEngine = null;

        

        //reset the controller data
        Controller.reset();

        //reset characters
        CharactersHash.reset();

        
        //create a new game engine
        gameEngine = GameEngine.getInstance();
        gameEngine.initialize(renderer);
        gameEngine.setAlive(true);

        /*tGameEngine = null;
        tGameEngine = new Thread(gameEngine);
        tGameEngine.setName("GameEngineThread");
        tGameEngine.start();
         * */
       singleton=null;
        synchronized (GameWindow.class) {
            singleton = this;
        }
        initComponents();

            startGame();

    }

    public void setEnergyBarLevel(int e){
        this.jPrgEnergy.setValue(e);
    }
    
    private void rendererMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_rendererMousePressed
    {//GEN-HEADEREND:event_rendererMousePressed
        renderer.requestFocusInWindow();

        Controller c = Controller.getInstance();
        c.handleMouseClick(evt);
    }//GEN-LAST:event_rendererMousePressed

    private void rendererMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_rendererMouseReleased
    {//GEN-HEADEREND:event_rendererMouseReleased
        Controller.getInstance().handleMouseReleased(evt);
	
    }//GEN-LAST:event_rendererMouseReleased

    private void rendererMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_rendererMouseEntered
    {//GEN-HEADEREND:event_rendererMouseEntered
        this.requestFocusInWindow();
        Controller c = Controller.getInstance();
        c.handleMouseMove(evt);
    }//GEN-LAST:event_rendererMouseEntered

    private void rendererMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_rendererMouseMoved
    {//GEN-HEADEREND:event_rendererMouseMoved
        Controller c = Controller.getInstance();
        c.handleMouseMove(evt);
	
	
    }//GEN-LAST:event_rendererMouseMoved

    private void rendererMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_rendererMouseClicked
    {//GEN-HEADEREND:event_rendererMouseClicked
	
    }//GEN-LAST:event_rendererMouseClicked

    private void formKeyReleased(KeyEvent evt) {
        Controller.getInstance().handleKeyRelease(evt);
    }

    private void formKeyPressed(KeyEvent evt) {
        Controller.getInstance().handleKeyPress(evt);

    }

    public void btnResetMouseClicked(MouseEvent evt) {

    }

    public void go() {

        gameEngine = GameEngine.getInstance();
        gameEngine.initialize(renderer);
        gameEngine.setAlive(true);

        tGameEngine = new Thread(gameEngine);
        tGameEngine.setName("GameEngineThread");
        tGameEngine.start();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                GameWindow gameWindow = new GameWindow();
                gameWindow.setVisible(true);

            }
        });
    }

    void initializeControlPanel(CharacterBase characterBoat) {
        this.controlPanel.initializeControlPanel(characterBoat);
    }

    void updateControlPanel(CharacterBoat characterBoat) {
        this.controlPanel.updateControlPanel(characterBoat);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private game.ControlPanel controlPanel;
    private javax.swing.JButton jBtnGo;
    private javax.swing.JButton jBtnReset;
    private javax.swing.JButton jBtnStorm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPnlGame;
    private javax.swing.JProgressBar jPrgEnergy;
    private game.Renderer renderer;
    // End of variables declaration//GEN-END:variables
}
